<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1, width=device-width" />

    <link rel="stylesheet" href="./global.css" />
    <link rel="stylesheet" href="./index.css" />
    <script src="/global.js" defer></script>

    <link rel="stylesheet" href="/Templates/footer.css" />

    <script src="https://unpkg.com/lightweight-charts/dist/lightweight-charts.standalone.production.js"></script>
    
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Josefin Sans:wght@400;600;700&display=swap"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,700;1,600&display=swap"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Literata:wght@400&display=swap"
    />
  </head>

  <header>
    <div id="barra"></div>
    
    
  </header>
  <body>
    
    
      
      <div class="home1">
        <div class="portada"></div>
        <div class="containerLable">
          <label class="frase">
            <p class="por-qu">El mejor lugar</p>
            <p class="por-qu">te hace sentir</p>
            <p class="por-qu">en casa</p>
          </label>
        </div>



        <div id="main-content">


        <div class="featured-items">
          <div class="featured-items-title">DESTACADOS</div>
          <div class="featured-content">
            <div class="product-grid2">
              <div class="destacados-grid">
                <% destacados.forEach(function(producto) { %>
                  <div class="product-card" 
                      data-id="<%= producto.producto_id %>" 
                      data-color="<%= producto.color %>">
                    <img src="<%= producto.imagePath %>" alt="<%= producto.nombre %>" class="product-image">
                    <div class="product-details">
                      <h3 class="product-title"><%= producto.nombre %></h3>
                      <p class="product-price">$<%= producto.precio %></p>
                    </div>
                  </div>
                <% }); %>
              </div>
            </div>
            <!-- Contenedor de la gráfica -->
            <div class="chart-container">
              <h3>Historial de Precios</h3>
              <div id="price-chart-container"></div>
              <!-- Botón para redirigir al producto -->
              <div class="chart-button-container">
                <a id="producto-link" href="#" class="chart-button">Ver Producto</a>
              </div>
            </div>
          </div>
        </div>
                
                
        
        

          <div class="categorias">

            <div class="categorias1">CATEGORIAS</div>

            <div class="line-parent">
              <div class="categoria">
                <a href="./catalogo?categoria=Salas">
                  <img
                    class="categoria-icon salasIcon"
                    alt="Salas"
                    src="./public/sillonBig.png"
                  />
                  <span class="categoria-nombre">Salas</span>
                </a>
              </div>
              
              <div class="categoria">
                <a href="./catalogo?categoria=Recámara">
                  <img
                    class="categoria-icon recamaraIcon"
                    alt="Recamaras"
                    src="./public/bed.png"
                  />
                  <span class="categoria-nombre">Recámara</span>
                </a>
              </div>
              
              <div class="categoria">
                <a href="./catalogo?categoria=Almacenaje">
                  <img
                    class="categoria-icon almacenajeIcon"
                    alt="Almacenaje"
                    src="./public/closet.png"
                  />
                  <span class="categoria-nombre">Almacenaje</span>
                </a>
              </div>
              
              <div class="categoria">
                <a href="./catalogo?categoria=Sillas y bancos">
                  <img
                    class="categoria-icon sillasBancosIcon"
                    alt="Sillas y bancos"
                    src="./public/whiteSofa.png"
                  />
                  <span class="categoria-nombre">Sillas y bancos</span>
                </a>
              </div>
              
              <div class="categoria">
                <a href="./catalogo?categoria=Mesas">
                  <img
                    class="categoria-icon mesasIcon"
                    alt="Mesas"
                    src="./public/woodTable.png"
                  />
                  <span class="categoria-nombre">Mesas</span>
                </a>
              </div>
              
              <div class="categoria">
                <a href="./catalogo?categoria=Decoración">
                  <img
                    class="categoria-icon decoracionIcon"
                    alt="Decoración"
                    src="./public/lamp.png"
                  />
                  <span class="categoria-nombre">Decoración</span>
                </a>
              </div>
            </div>
            
          </div>
          
          
          <div class="recent-items">
            <div class="recent-items1">AGREGADOS RECIENTEMENTE</div>
            
            <div class="product-grid">
              <div class="product-list">
                <% recientes.forEach(function(producto) { %>
                  <a href="/producto?id=<%= producto.producto_id %>" class="product-link">
                    <div class="product-card2">
                      <img src="<%= producto.imagePath %>" alt="<%= producto.nombre %>" class="product-image2">
                      <div class="product-details">
                        <h3 class="product-title"><%= producto.nombre %></h3>
                        <div class="product-price">
                          <p class="discounted-price">$<%= producto.precio %></p>
                        </div>
                      </div>
                    </div>
                  </a>
                <% }); %>
              </div>
            </div>
            
          </div>
          
              
        
          <div id="footer"></div>

        </div>

      </div>
    </div>



    <script>


      async function cargarAnuncio() {
        try {
          const response = await fetch('/anuncio');
          const data = await response.json();
      
          if (data.success && data.url) {
            const anuncioDiv = document.createElement('div');
            anuncioDiv.style.position = 'fixed';
            anuncioDiv.style.top = '0';
            anuncioDiv.style.left = '0';
            anuncioDiv.style.width = '100vw';
            anuncioDiv.style.height = '100vh';
            anuncioDiv.style.background = 'rgba(0, 0, 0, 0.5)';
            anuncioDiv.style.display = 'flex';
            anuncioDiv.style.justifyContent = 'center';
            anuncioDiv.style.alignItems = 'center';
            anuncioDiv.style.zIndex = '1000';
      
            const img = document.createElement('img');
            img.src = data.url;
            img.style.maxWidth = '80%';
            img.style.maxHeight = '80%';
      
            anuncioDiv.appendChild(img);
            anuncioDiv.onclick = () => anuncioDiv.remove();
            document.body.appendChild(anuncioDiv);
          } else {
            console.log('Anuncio no habilitado o no disponible.');
          }
        } catch (error) {
          console.error('Error al cargar el anuncio:', error);
        }
      }
      
    
      // Llamar la función al cargar la página
      cargarAnuncio();
      
      
      
      document.addEventListener('DOMContentLoaded', async () => {
          const productos = document.querySelectorAll('.product-card');
          const chartContainer = document.getElementById('price-chart-container');
          const productoLink = document.getElementById('producto-link');

          let chart = LightweightCharts.createChart(chartContainer, {
            width: chartContainer.offsetWidth,
            height: chartContainer.offsetHeight,
            layout: {
              backgroundColor: 'rgba(0, 0, 0, 0)',
              textColor: '#000',
              fontSize: 20,
            },
            grid: {
              vertLines: { color: '#eeeeee' },
              horzLines: { color: '#eeeeee' },
            },
            priceScale: {
              borderColor: '#cccccc',
              autoScale: true,
            },
            timeScale: {
              borderColor: '#cccccc',
              timeVisible: true,
            },
          });

          let seriesMap = new Map(); // Mapa para almacenar las series por producto
          let productColors = new Map(); // Mapa para almacenar los colores originales

          // Función para actualizar la gráfica
          const updateChart = async (productoId, color, isSelected) => {
            try {
              const response = await fetch(`/producto-historial/${productoId}`);
              let chartData = await response.json();

              if (!chartData || chartData.length === 0) {
                console.warn(`No hay datos para el producto ${productoId}`);
                return;
              }

              chartData = chartData.map(data => ({
                time: data.time,
                value: parseFloat(data.value),
              }));

              if (!seriesMap.has(productoId)) {
                // Si no existe una serie para este producto, la creamos
                let lineSeries = chart.addLineSeries({
                  lineWidth: 3,
                  color: color, // Usamos el color original del backend
                });

                lineSeries.setData(chartData);
                seriesMap.set(productoId, lineSeries);
                productColors.set(productoId, color); // Guardamos el color original
              } else {
                // Si ya existe, solo actualizamos los datos
                seriesMap.get(productoId).setData(chartData);
              }

              chart.timeScale().fitContent();

              // Ajustar opacidad: Producto seleccionado = 100%, los demás = 20%
              seriesMap.forEach((series, id) => {
                let originalColor = productColors.get(id);
                series.applyOptions({
                  lineWidth: 3,
                  priceLineVisible: false,
                  color: id === productoId ? originalColor : `${originalColor}53`, // 🔥 Aplica opacidad 20% (`33` en hex)
                });
              });

              productoLink.href = `/producto?id=${productoId}`;
            } catch (err) {
              console.error('Error al actualizar la gráfica:', err);
            }
          };

          // Cargar todas las gráficas al inicio
          productos.forEach(async (producto) => {
            const productoId = producto.getAttribute('data-id');
            const color = producto.getAttribute('data-color'); // Usamos el color del backend
            await updateChart(productoId, color, false);
          });

          // Evento para cambiar la opacidad cuando un producto es seleccionado
          productos.forEach((producto) => {
            producto.addEventListener('click', async () => {
              const productoId = producto.getAttribute('data-id');
              await updateChart(productoId, producto.getAttribute('data-color'), true);
            });
          });


        // Función de interpolación de datos (asegura que no haya huecos en la gráfica)
        function interpolateData(data) {
          const interpolated = [];
      
          for (let i = 0; i < data.length - 1; i++) {
            const current = data[i];
            const next = data[i + 1];
      
            interpolated.push(current);
      
            const currentDate = new Date(current.time);
            const nextDate = new Date(next.time);
            const diffDays = Math.floor((nextDate - currentDate) / (1000 * 60 * 60 * 24));
      
            if (diffDays > 1) {
              const priceStep = (next.value - current.value) / diffDays;
      
              for (let j = 1; j < diffDays; j++) {
                const interpolatedDate = new Date(currentDate);
                interpolatedDate.setDate(currentDate.getDate() + j);
      
                interpolated.push({
                  time: interpolatedDate.toISOString().split('T')[0],
                  value: current.value + priceStep * j,
                });
              }
            }
          }
      
          interpolated.push(data[data.length - 1]);
          return interpolated;
        }
      });
      

            
    
        window.onload = function () {
      let claseAResaltar = "inicio";

      // Cargar barra.html dinámicamente
      fetch("/Templates/barra.html")
        .then((response) => response.text())
        .then((data) => {
          document.getElementById("barra").innerHTML = data;

          // Aplicar el estilo para el elemento resaltado
          let elementoAResaltar = document.querySelector(`.${claseAResaltar}`);
          if (elementoAResaltar) {
            elementoAResaltar.style.fontWeight = "bold";
            elementoAResaltar.style.color = "var(--color-lightseagreen)";
          }

          // Por defecto, el login-wrapper3 redirige a /login
          const loginWrapper = document.querySelector("#login-wrapper3");
          const loginText = document.querySelector(".login5"); // El texto dentro del botón

          // Asegúrate de seleccionar cartContainer DESPUÉS de que se cargue la barra
          const cartContainer = document.getElementById("cart-container");

          if (loginWrapper) {
            loginWrapper.onclick = function () {
              window.location.href = "/login";
            }; // Redirige a /login por defecto
          }

          // Verificar la sesión para modificar el botón de login/logout si es necesario
          fetch("/api/session")
            .then((response) => response.json())
            .then((data) => {
              console.log("Sesión obtenida:", data);

              if (data.isAuthenticated) {
                // Cambiamos el color del contenedor (wrapper) a rojo chukum
                loginWrapper.setAttribute(
                  "style",
                  "background-color: #C19A6B; top: -10;"
                );

                // Cambiamos el texto a "Mi Perfil"
                loginText.textContent = "Mi Perfil";

                // Cambiamos la acción a ir al perfil
                loginWrapper.onclick = function () {
                  window.location.href = "/perfil";
                };

                // Hacer visible el cartContainer
                if (cartContainer) {
                  cartContainer.style.display = "flex"; // O 'block', según el diseño
                } else {
                  console.warn("cart-container no encontrado en el DOM");
                }

                console.log("Sesión iniciada. Usuario:", data.correo);
              } else {
                console.log("No hay sesión iniciada.");
                // Ocultar el cartContainer si no está autenticado
                if (cartContainer) {
                  cartContainer.style.display = "none";
                }
              }
            })
            .catch((error) => console.error("Error al cargar la sesión:", error));
        })
        .catch((error) => console.error("Error al cargar la barra:", error));

      // Cargar el footer.html dinámicamente
      fetch("/Templates/footer.html")
        .then((response) => response.text())
        .then((data) => {
          document.getElementById("footer").innerHTML = data;
        })
        .catch((error) => console.error("Error al cargar el footer:", error));
    };







      
      function toggleMenu() {
        const menu = document.querySelector('.menu-container');
        menu.classList.toggle('active'); // Activa o desactiva el menú
      }

      function hideSidebar() {
        const menu = document.querySelector('.menu-container');
        menu.classList.remove('active'); // Oculta el menú
      }
     
    </script>
    
    
    
      
  </body>
  <script src="https://unpkg.com/lightweight-charts@4.0.0/dist/lightweight-charts.standalone.production.js"></script>
  <script src="/global.js" defer></script>
</html>
