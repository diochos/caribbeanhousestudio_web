<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="initial-scale=1, width=device-width" />

  <link rel="stylesheet" href="./global.css" />
  <link rel="stylesheet" href="./perfil.css" />

  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;600;700&display=swap"
  />
  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,600&display=swap"
  />
  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Literata:wght@400&display=swap"
  />

  <title>Compras</title>
</head>
<body>
  <div id="barra"></div>

  <div class = "container" >

    <div class="profile-container">
        <!-- Información personal -->
        <section class="personal-info">
          <h2>Información Personal</h2>
          <form id="personal-info-form">
            <label for="name">Nombre:</label>
            <input
              type="text"
              id="name"
              name="name"
              placeholder="Tu nombre completo"
              value="<%= user.nombre %>"
              required
            />
  
            <label for="phone">Teléfono:</label>
            <input
              type="text"
              id="phone"
              name="phone"
              placeholder="Tu número de teléfono"
              value="<%= user.telefono %>"
              required
            />
            <button type="submit">Guardar cambios</button>

          
        </section>
      
        <!-- Direcciones de envío -->
        <section class="address-section">
          <h2>Direcciones de Envío</h2>
          <ul id="address-list">
            <!-- Ejemplo de una dirección -->
            <li class="address-item">
              <p><b>Nombre de Dirección:</b> Casa</p>
              <p><b>Calle:</b> Av. Siempre Viva 123</p>
              <p><b>Fraccionamiento o Colonia:</b> Los Heores</p>
              <p><b>Ciudad:</b> Mérida</p>
              <p><b>Estado:</b> Yucatán</p>
              <p><b>CP:</b> 12345</p>
              <button class="edit-address">Editar</button>
              <button class="delete-address">Eliminar</button>
            </li>
          </ul>
          <button id="add-address">Agregar Dirección</button>
        </section>
      
        <!-- Métodos de pago -->
        <section class="payment-section">
          <h2>Métodos de Pago</h2>
          <ul id="payment-list">
            <!-- Ejemplo de un método de pago -->
            <li class="payment-item">
              <p><b>Tipo:</b> Tarjeta de Crédito</p>
              <p><b>Detalles:</b> **** **** **** 1234</p>
              <button class="delete-payment">Eliminar</button>
            </li>
          </ul>
          <button id="add-payment">Agregar Método de Pago</button>
        </section>
      </div>

  </div>



  <div id="footer" class="footer"></div>


  
  <script>
    // barra y footer
    
    window.onload = function () {
      let claseAResaltar = "vacio";

      // Cargar barra.html dinámicamente
      fetch("/Templates/barra.html")
        .then((response) => response.text())
        .then((data) => {
          document.getElementById("barra").innerHTML = data;

          // Aplicar el estilo para el elemento resaltado
          let elementoAResaltar = document.querySelector(`.${claseAResaltar}`);
          if (elementoAResaltar) {
            elementoAResaltar.style.fontWeight = "bold";
            elementoAResaltar.style.color = "var(--color-lightseagreen)";
          }

          // Por defecto, el login-wrapper3 redirige a /login
          const loginWrapper = document.querySelector("#login-wrapper3");
          const loginText = document.querySelector(".login5"); // El texto dentro del botón

          // Asegúrate de seleccionar cartContainer DESPUÉS de que se cargue la barra
          const cartContainer = document.getElementById("cart-container");

          if (loginWrapper) {
            loginWrapper.onclick = function () {
              window.location.href = "/login";
            }; // Redirige a /login por defecto
          }

          // Verificar la sesión para modificar el botón de login/logout si es necesario
          fetch("/api/session")
            .then((response) => response.json())
            .then((data) => {
              console.log("Sesión obtenida:", data);

              if (data.isAuthenticated) {
                // Cambiamos el color del contenedor (wrapper) a rojo chukum
                loginWrapper.setAttribute(
                  "style",
                  "background-color: #C19A6B; top: -10;"
                );

                // Cambiamos el texto a "Mi Perfil"
                loginText.textContent = "Mi Perfil";

                // Cambiamos la acción a ir al perfil
                loginWrapper.onclick = function () {
                  window.location.href = "/perfil";
                };

                // Hacer visible el cartContainer
                if (cartContainer) {
                  cartContainer.style.display = "flex"; // O 'block', según el diseño
                } else {
                  console.warn("cart-container no encontrado en el DOM");
                }

                console.log("Sesión iniciada. Usuario:", data.correo);
              } else {
                console.log("No hay sesión iniciada.");
                // Ocultar el cartContainer si no está autenticado
                if (cartContainer) {
                  cartContainer.style.display = "none";
                }
              }
            })
            .catch((error) => console.error("Error al cargar la sesión:", error));
        })
        .catch((error) => console.error("Error al cargar la barra:", error));

      // Cargar el footer.html dinámicamente
      fetch("/Templates/footer.html")
        .then((response) => response.text())
        .then((data) => {
          document.getElementById("footer").innerHTML = data;
        })
        .catch((error) => console.error("Error al cargar el footer:", error));
    };

    // guardar cambios en perfil

    document.getElementById("personal-info-form").addEventListener("submit", function (event) {
      event.preventDefault(); // Evita el comportamiento predeterminado de recargar la página
    
      const formData = {
        name: document.getElementById("name").value,
        phone: document.getElementById("phone").value,
      };
    
      // Enviar datos al servidor usando Fetch API
      fetch("/api/update-profile", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      })
        .then((response) => {
          if (response.ok) {
            alert("Información actualizada correctamente");
          } else {
            alert("Hubo un error al actualizar la información");
          }
        })
        .catch((error) => console.error("Error al enviar los datos:", error));
    });
    


  </script>
</body>
</html>
